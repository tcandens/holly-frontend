/* Project list grid variables */
$list-width: 1000px;
$columns: 3; // The number of list items in the first row
$pseudo-columns: $columns * 2 - 1; // The number of items the are needed to make two rows. First Row = 3; Second Row = 2; 3 + 3-1 = 3*2 -1
$margin: 50px; // margin-right value for all list items
$margin-total: ($columns - 1) * $margin; // Total of margins within the list viewport
$item-diameter: ( $list-width - $margin-total ) / $columns; // Size of list items as calculated with widths of list margin and number of columns
$container-width: $item-diameter * $pseudo-columns + ( $margin * $pseudo-columns ); // The width of overflow container within list viewport

.project-list {
  margin: 0 auto;
  margin-bottom: -$item-diameter + 100px;
  padding: 0;
  max-width: $list-width;
  list-style: none;
  // background: grey; // Debugger
  overflow-x: hidden;
  overflow-y: hidden;
}
.project-list_container { // Container within the project-list 'viewport' that allows rows to overflow, be hidden, and then split
  width: $container-width;
}
.project-list_item {
  display: block;
  position: relative;
  float: left;
  margin-right: $margin;
  margin-bottom: $item-diameter * 1;
  width: $item-diameter;
  height: $item-diameter;
  list-style: none;
  // border: 1px solid chocolate; // Debugger
  // GRID SETUP WITH NTH-CHILD
  &:nth-child(5n+4), &:nth-child(5n+5) { // Shifting the last list items in row down and left to make pseudo row
    $shift-x: -($columns * $margin) - (($columns - 1) * $item-diameter) - ( $item-diameter / 2 ) + ( $margin / 2);
    $shift-y: $item-diameter * 1;
    @include transform(translate3d($shift-x, $shift-y, 0));
  }
  img {
    width: 100%;
    height: 100%;
  }
}
.project-list_title {
  position: absolute;
  opacity: 0;
}
.project-list_thumbnail {
  width: 100%;
  height: 100%;
}
.project-list_thumbnail-hover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-repeat: no-repeat;
  opacity: 0;
  @include transition(opacity 400ms ease);
  &:hover {
    opacity: 1;
  }
}
